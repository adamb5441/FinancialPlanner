@using Microsoft.AspNet.Identity;
@using FinancialPlanner.Helpers; 
@{ 
    UserRoleHelper userRoleHelper = new UserRoleHelper();
    var name = userRoleHelper.getName(User.Identity.GetUserId());
}
<!doctype html>
<html class="fixed sidebar-left-collapsed">
<head>

    <!-- Basic -->
    <meta charset="UTF-8">

    <title>Finite</title>
    <meta name="keywords" content="HTML5 Admin Template" />
    <meta name="description" content="Porto Admin - Responsive HTML5 Template">
    <meta name="author" content="okler.net">

    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

    <!-- Web Fonts  -->
    <link href="http://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800|Shadows+Into+Light" rel="stylesheet" type="text/css">

    <!-- Vendor CSS -->
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/datepicker3.css" rel="stylesheet" />
    <link href="~/Content/font-awesome/css/font-awesome.css" rel="stylesheet" />
    <link href="~/Content/magnific-popup.css" rel="stylesheet" />
    <link href="~/Content/morris.css" rel="stylesheet" />
    <link href="~/Content/select2.css" rel="stylesheet" />
    <link href="~/Content/datatables.css" rel="stylesheet" />
    <!-- Theme CSS -->
    <link href="~/Content/theme.css" rel="stylesheet" />

    <!-- Skin CSS -->
    <link href="~/Content/skins/default.css" rel="stylesheet" />

    <!-- Theme Custom CSS -->
    <link href="~/Content/theme-custom.css" rel="stylesheet" />
    <!-- Head Libs -->
    <script src="~/Scripts/modernizr.js"></script>
</head>
<body>
    <section class="body">

        <!-- start: header -->
        <header class="header">
            <div class="logo-container">
                <a href="/" class="logo">
                    <img src="~/Imgs/Finite.jpg" height="35" alt="Porto Admin" />
                </a>
                <div class="visible-xs toggle-sidebar-left" data-toggle-class="sidebar-left-opened" data-target="html" data-fire-event="sidebar-left-opened">
                    <i class="fa fa-bars" aria-label="Toggle sidebar"></i>
                </div>
            </div>

            <!-- start: search & user box -->
            <div class="header-right">



                <span class="separator"></span>

                <div id="userbox" class="userbox">
                    @if (Request.IsAuthenticated)
                    {

                        <a href="#" data-toggle="dropdown">
                            <figure class="profile-picture">
                                <i class="fa fa-user"></i>
                            </figure>
                            <div class="profile-info" data-lock-name="John Doe" data-lock-email="johndoe@okler.com">
                                <span class="name">@name</span>
                            </div>

                            <i class="fa custom-caret"></i>
                        </a>
                    }
                    else
                    {
                        <a href=@Url.Action("Login", "Account") class="btn btn-primary">Login</a>
                        <a href=@Url.Action("Register", "Account") class="btn btn-primary">Register</a>

                    }

                    <div class="dropdown-menu">
                        <ul class="list-unstyled">
                            <li class="divider"></li>
                            <li>
                                <a role="menuitem" tabindex="-1" href=@Url.Action("Details", "Users", new { id = User.Identity.GetUserId() })><i class="fa fa-user"></i> My Profile</a>
                            </li>

                            @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                            {
                                @Html.AntiForgeryToken();
                                <li><a class="logout" href="javascript:document.getElementById('logoutForm').submit()"><i class="fa fa-power-off"></i>Logout</a></li>
                            }
                        </ul>
                    </div>
                </div>

            </div>
            <!-- end: search & user box -->
        </header>
        <!-- end: header -->

        <div class="inner-wrapper">
            <!-- start: sidebar -->
            <aside id="sidebar-left" class="sidebar-left">

                <div class="sidebar-header">
                    <div class="sidebar-title">
                        Navigation
                    </div>
                    <div class="sidebar-toggle hidden-xs" data-toggle-class="sidebar-left-collapsed" data-target="html" data-fire-event="sidebar-left-toggle">
                        <i class="fa fa-bars" aria-label="Toggle sidebar"></i>
                    </div>
                </div>

                <div class="nano">
                    <div class="nano-content">
                        <nav id="menu" class="nav-main" role="navigation">
                            <ul class="nav nav-main">
                                <li>
                                    <a href=@Url.Action("Index","Home")>
                                        <i class="fa fa-dashboard" aria-hidden="true"></i>
                                        <span>Dashboard</span>
                                    </a>
                                </li>
                                @if (User.IsInRole("Head") || User.IsInRole("Member"))
                                {
                                    <li>
                                        <a href=@Url.Action("Index", "Transactions", null)>
                                            <i class="fa fa-bank" aria-hidden="true"></i>
                                            <span>Transaction</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a style="cursor: pointer" data-toggle="modal" data-target="#budget">
                                            <i class="fa fa-shopping-cart" aria-hidden="true"></i>
                                            <span>Create Budget</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a style="cursor: pointer" data-toggle="modal" data-target="#account">
                                            <i class="fa fa-credit-card" aria-hidden="true"></i>
                                            <span>Create Account</span>
                                        </a>
                                    </li>
                                    <li>
                                        <a href=@Url.Action("Create", "Transactions", null)>
                                            <i class="fa fa-money" aria-hidden="true"></i>
                                            <span>Deposit</span>

                                        </a>
                                    </li>

                                    <li class="nav-parent">
                                        <a>
                                            <i class="fa fa-gears" aria-hidden="true"></i>
                                            <span>Options</span>
                                        </a>
                                        <ul class="nav nav-children">
                                            <li>@Html.ActionLink("Edit", "Edit", "Households")</li>
                                            <li>@Html.ActionLink("Leave Household", "LeaveHousehold", "Households")</li>
                                            <li>@Html.ActionLink("Invite user", "Create", "Invitations")</li>
                                        </ul>
                                    </li>

                                }
                                @if (Request.IsAuthenticated)
                                {
                                    <li>
                                        <a href=@Url.Action("Details", "Users", new { id = User.Identity.GetUserId() })>
                                            <i class="fa fa-user"></i>
                                            <span>Profile</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>


            </aside>

            <!-- end: sidebar -->

            <section role="main" class="content-body">

                @RenderBody()

            </section>
        </div>
    </section>


    <div class="modal fade" id="account" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Account</h4>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("Create", "Accounts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">


                            <div class="form-group">
                                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Editor("Name", new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                                    @Html.ValidationMessage("Name", "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("InitialBalance", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Editor("InitialBalance", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("InitialBalance", "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.Label("LowBalanceLevel", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Editor("LowBalanceLevel", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("LowBalanceLevel", "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="budget" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Create Budget</h4>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("Create", "Budgets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Editor("Name", new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                                    @Html.ValidationMessage("Name", "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Editor("Description", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("Description", "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("TargetTotal", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.Editor("TargetTotal", new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessage("TargetTotal", "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="deposit" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Modal Header</h4>
                </div>
                <div class="modal-body">
                    <p>This is a small modal.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Vendor -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery.browser.mobile.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/nanoscroller.js"></script>
    <script src="~/Scripts/magnific-popup.js"></script>
    <script src="~/Scripts/jquery.placeholder.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/select2.js"></script>
    <script src="~/Scripts/jquery.dataTables.js"></script>
    <script src="~/Scripts/datatables.js"></script>
    <script src="~/Scripts/snap.svg.js"></script>
    <script src="~/Scripts/liquid.meter.js"></script>

    <!-- Specific Page Vendor -->
    <!-- Theme Base, Components and Settings -->
    <script src="~/Scripts/theme.js"></script>

    <!-- Theme Custom -->
    <script src="~/Scripts/theme.custom.js"></script>

    <!-- Theme Initialization Files -->
    <script src="~/Scripts/theme.init.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
    <script src="https://cdn.jsdelivr.net/npm/promise-polyfill"></script>

    <script src="~/Scripts/examples.charts.js"></script>

    <script >
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var min = parseInt($('#minA').val(), 10);
                var max = parseInt($('#maxA').val(), 10);
                var amount = parseFloat(data[1]) || 0;
                var minD = moment($('#minD').val(), 'DD.MM.YYYY').format('YYYY-MM-DD[T]HH:mm:ss');
                var maxD = moment($('#maxD').val(), 'DD.MM.YYYY').format('YYYY-MM-DD[T]HH:mm:ss');
                var age = new moment(data[3], 'DD.MM.YYYY').format('YYYY-MM-DD[T]HH:mm:ss') || 0;
                if ((isNaN(min) && isNaN(max)) ||
                    (isNaN(min) && amount <= max) ||
                    (min <= amount && isNaN(max)) ||
                    (min <= amount && amount <= max)) {
                    return true;
                }
                return false;
            }
        );
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                var minD = moment($('#minD').val(), 'DD.MM.YYYY').format('YYYY-MM-DD[T]HH:mm:ss') || "";
                var maxD = moment($('#maxD').val(), 'DD.MM.YYYY').format('YYYY-MM-DD[T]HH:mm:ss') || "";
                var age = new moment(data[3], 'DD.MM.YYYY').format('YYYY-MM-DD[T]HH:mm:ss') || 0;
                if (
                    (minD == "Invalid date" || maxD == "Invalid date") ||
                    (moment(age).isSameOrAfter(minD) && moment(age).isSameOrBefore(maxD)) ||
                    (minD == "Invalid date" && moment(age).isSameOrBefore(maxD)) || 
                    (moment(age).isSameOrAfter(minD) && maxD == "Invalid date")
                    ) {
                    return true;
                }
                return false;
            }
        );
        var table = $('#example').DataTable();

        // Event listener to the two range filtering inputs to redraw on input
        $('#minA, #maxA').keyup(function () {
            console.log('this works')
            table.draw();
        });
        $('#minD, #maxD').change(function () {
            console.log('this works')
            table.draw();
        });


        $('.dtable').DataTable();


    </script>
    @RenderSection("scripts", required: false)
</body>
</html>


